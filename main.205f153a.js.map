{"version":3,"sources":["scripts/main.js"],"names":["PHONES_URL","DETAILS_URL","body","document","querySelector","getPhones","abortController","AbortController","fetch","setTimeout","abort","signal","then","response","json","map","phone","id","catch","Promise","reject","Error","getPhonesDetails","idArray","all","displayPhones","phonesArray","innerHTML","name","join","handleError","error"],"mappings":";AAAA,aAEA,IAAMA,EACF,wEACEC,EACF,oEACEC,EAAOC,SAASC,cAAc,QAEpC,SAASC,IACDC,IAAAA,EAAkB,IAAIC,gBAIrBC,OAFPC,WAAW,WAAMH,OAAAA,EAAgBI,SAAS,KAEnCF,MAAMR,EAAY,CAAEW,OAAQL,EAAgBK,SAChDC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAC,GAAYA,OAAAA,EAASE,IAAI,SAAAC,GAASA,OAAAA,EAAMC,OAC7CC,MAAM,WAAMC,OAAAA,QAAQC,OAAO,IAAIC,MAAM,sBAG1C,SAASC,EAAiBC,GACjBJ,OAAAA,QAAQK,IAAID,EAAQR,IAAI,SAAAE,GACtBT,OAAAA,MAASP,GAAAA,OAAAA,GAAcgB,OAAAA,EAAvB,UACJL,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BI,MAAM,WAAMC,OAAAA,QAAQC,OAAO,IAAIC,MAAnB,iCAInB,SAASI,EAAcC,GACrBxB,EAAKyB,UAEGD,uBAAAA,OAAAA,EAAYX,IAAI,SAAAC,GAAgBA,MAAAA,OAAAA,OAAAA,EAAMY,KAAjB,WAA8BC,KAAK,IAFhE,mBAOF,SAASC,EAAYC,GACnB7B,EAAKyB,UACuBI,iCAAAA,OAAAA,EAD5B,YAKF1B,IACGO,KAAK,SAAAC,GAAYS,OAAAA,EAAiBT,KAClCD,KAAK,SAAAC,GAAYY,OAAAA,EAAcZ,KAC/BK,MAAM,SAAAa,GAASD,OAAAA,EAAYC","file":"main.205f153a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst PHONES_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst DETAILS_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst body = document.querySelector('body');\n\nfunction getPhones() {\n  const abortController = new AbortController();\n\n  setTimeout(() => abortController.abort(), 5000);\n\n  return fetch(PHONES_URL, { signal: abortController.signal })\n    .then(response => response.json())\n    .then(response => response.map(phone => phone.id))\n    .catch(() => Promise.reject(new Error('Request timeout')));\n}\n\nfunction getPhonesDetails(idArray) {\n  return Promise.all(idArray.map(id => {\n    return fetch(`${DETAILS_URL}${id}.json`)\n      .then(response => response.json())\n      .catch(() => Promise.reject(new Error(`Can't get phone details`)));\n  }));\n}\n\nfunction displayPhones(phonesArray) {\n  body.innerHTML = `\n    <ul>\n        ${phonesArray.map(phone => `<li>${phone.name}</li>`).join('')}\n    </ul>\n  `;\n}\n\nfunction handleError(error) {\n  body.innerHTML = `\n    <h1 style=\"color: #f00\">${error}<h1>\n  `;\n}\n\ngetPhones()\n  .then(response => getPhonesDetails(response))\n  .then(response => displayPhones(response))\n  .catch(error => handleError(error));\n"]}